<?xml version="1.0" encoding="UTF-8"?>

<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
		     http://www.springframework.org/schema/beans/spring-beans.xsd
		     http://www.springframework.org/schema/security
		     http://www.springframework.org/schema/security/spring-security.xsd">
    <!-- blog.csdn.net/honghailiang888/article/details/53765508 -->

    <beans:bean name="bcryptEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></beans:bean>

    <!-- 根据不同请求所需权限跳转到不同的登录界面 -->
    <beans:bean id="loginFormsMap" class="java.util.HashMap">
        <beans:constructor-arg>
            <beans:map>
                <beans:entry key="/consumer/**" value="/login" />
                <beans:entry key="/manager/**" value="/manager/login" />
                <beans:entry key="/**" value="/login" />
            </beans:map>
        </beans:constructor-arg>
    </beans:bean>
    <!-- 被认证请求根据所需权限跳转到不同的登录界面 -->
    <beans:bean id="myAuthenticationEntryPoint" class="com.gzr.springSecurity.MyAuthenticationEntryPoint">
        <beans:property name="authEntryPointMap" ref="loginFormsMap"/>
        <beans:constructor-arg name="loginFormUrl" value="/login" />
    </beans:bean>

    <!-- 根据不同的权限，跳转到不同的页面（直接点击登录页面用） -->
    <beans:bean id="dispatcherMap" class="java.util.HashMap">
        <beans:constructor-arg>
            <beans:map>
                <beans:entry key="ROLE_USER" value="/"/>
                <beans:entry key="ROLE_MANAGER" value="/manager"/>
            </beans:map>
        </beans:constructor-arg>
    </beans:bean>
    <!-- 授权成功后控制 -->
    <beans:bean id="myAuthenticationSuccessHandler" class="com.gzr.springSecurity.MyAuthenticationSuccessHandler">
        <beans:property name="authDispatcherMap" ref="dispatcherMap"></beans:property>
    </beans:bean>
    <!-- 登录失败后控制 -->
    <beans:bean id="myAuthenticationFailureHandler" class="com.gzr.springSecurity.MyAuthenticationFailureHandler">
        <beans:property name="loginEntry" ref="myAuthenticationEntryPoint"/>
    </beans:bean>

    <!-- 使用自定义类myUserDetailsService从数据库获取用户信息 -->
    <authentication-manager>
        <authentication-provider user-service-ref="myUserDeatilsService">
            <!-- 加密 -->
            <password-encoder ref="bcryptEncoder"/>
        </authentication-provider>
    </authentication-manager>

    <!-- 还需要配置login-processing-url属性，能够拦截/manager/login和/login提交，从而经过UsernamePasswordAuthenticationFilter时对其进行登录验证（requiresAuthentication(request, response)判断） -->

    <http auto-config="true" use-expressions="true" entry-point-ref="myAuthenticationEntryPoint">
        <form-login login-page="/login" login-processing-url="/**/login" authentication-failure-handler-ref="myAuthenticationFailureHandler"
                    authentication-success-handler-ref="myAuthenticationSuccessHandler"/>
        <!-- 认证成功用自定义类myAuthenticationSuccessHandler处理 -->

        <logout logout-url="/logout" logout-success-url="/" invalidate-session="true" delete-cookies="JSESSIONID" />
        <!-- 登陆成功后拒绝访问跳转的页面 -->
        <access-denied-handler error-page="/security/deny"/>

        <!-- 是否需要禁用csrf -->
        <csrf disabled="false"/>
        <intercept-url pattern="/consumer/safe/**" access="hasRole('ROLE_USER') or hasRole('ROLE_MANAGER')"/>
        <intercept-url pattern="/manager" access="hasRole('ROLE_MANAGER')"/>

    </http>

</beans:beans>